******************* 공통 핵심 알고리즘 *******************
			    가위(0), 바위(1), 보(2)
*************************************************************
COM	- USER	= RESULT
----------------------------------------
보(2)	- 가위(0)	= USER WIN(2)
바위(1)	- 보(2) 	= USER WIN(-1)
가위(0)	- 바위(1)	= USER WIN(-1)
바위(1)	- 가위(0)	= COM WIN(1)
보(2)	- 바위(1) 	= COM WIN(1)
가위(0)	- 보(2) 	= COM WIN(-2)
COM == USER	> DRAW(0)
*************************** 결론 ***************************
(COM) - (USER)의 결과가 2 또는 -1일 때 USER의 승리
(COM) - (USER)의 결과가 1 또는 -2일 때 COM의 승리
COM과 USER의 값이 같으면 무승부
******************************************************************************************************************
mid1 알고리즘

1. 컴퓨터와 유저의 문자열타입과 정수타입 변수를 각각 하나씩 만들어 줍니다.
   게임 다시시작과 종료를 위한 변수도 초기화해줍니다. 스캐너도 생성합니다.
2. 무한 반복문을 시작합니다.
	//사용자의 가위바위보 입력 받기
3. 스캐너를 활용하여 가위, 바위, 보의 문자열을 받아 유저의 변수에 저장합니다.
	//사용자의 입력을 정수로 변환
4. if문을 사용하여 사용자에게 받은 입력을 문자열 비교를 통해 유저의
   정수타입 변수에 정수값을 저장합니다. (가위=0, 바위=1, 보=2)
5. 가위, 바위, 보 외의 문자열이 입력되면 잘못 입력되었음을 알리고 다시 입력을 받습니다.
	//컴퓨터의 가위바위보 랜덤 생성
6. 컴퓨터 정수타입 변수에 랜덤함수를 사용하여 0부터 2까지의 숫자를 랜덤 저장합니다.
7. if문을 사용하여 컴퓨터 정수타입 값에 따라 문자열타입 변수에
   가위바위보를 저장합니다. (0=가위, 1=바위, 2=보)
	//가위바위보 결과
8. 상단의 핵심 알고리즘을 통해 if문을 사용하여 결과를 출력합니다.
9. 비겼을 때에는 반복문 첫줄로 돌아가 다시 시작하도록 합니다.
10. 만약 결과가 잘 나왔다면 재경기 여부를 물어보고 '다시하기'입력을 받으면 반복문 내 첫줄로 돌아갑니다.
   아무키나 입력하면 반복문을 빠져나와 프로그램이 종료되고 종료 멘트가 나갑니다.

******************************************************************************************************************
mid2 알고리즘

1. 컴퓨터와 유저의 문자열타입과 정수타입 변수를 각각 하나씩 만들어 줍니다.
   게임 다시시작과 종료를 위한 변수도 초기화해줍니다. 스캐너도 생성합니다.
2. 무한 반복문을 시작합니다.
	//사용자의 가위바위보 입력 받기
3. 스캐너를 활용하여 1(가위), 2(바위), 3(보) 정수값을 받아 유저의 변수에 저장합니다.
   예외처리를 통해 문자입력으로 인한 프로그램 중지를 방지합니다. 다시 입력할 수 있도록 합니다.
4. 정숫값을 받은 유저의 변수에 -1을 하여 핵심 알고리즘 계산을 위해 <가위(0), 바위(1), 보(2)>를 맞춰줍니다.
5. switch, case 문을 활용하여 유저의 문자열타입 변수에 가위, 바위, 보를 저장해줍니다.
6. 잘못된 입력을 받으면 잘못 입력되었음을 알리고 다시 입력을 받습니다.
	//컴퓨터의 가위바위보 랜덤 생성
7. 컴퓨터 정수타입 변수에 랜덤함수를 사용하여 0부터 2까지의 숫자를 랜덤 저장합니다.
8. switch, case 문을 활용하여 컴퓨터 정수타입 값에 따라 문자열타입 변수에
   가위바위보를 저장합니다. (0=가위, 1=바위, 2=보)
	//가위바위보 결과
9. 최상단의 핵심 알고리즘을 통해 switch, case문을 사용하여 결과를 출력합니다.
10. 비기거나 잘못된 입력을 받았을 때에는 반복문 첫줄로 돌아가 다시 시작하도록 합니다.
11. 만약 결과가 잘 나왔다면 재경기 여부를 물어보고 '1'입력을 받으면 반복문 내 첫줄로 돌아갑니다.
   다른 숫자를 입력하면 반복문을 빠져나와 프로그램이 종료되고 종료 멘트가 나갑니다.